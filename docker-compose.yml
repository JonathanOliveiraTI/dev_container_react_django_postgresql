version: '3.8'

services:
  db:
    image: postgres:13.20-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      #Copia todos os arquivos de frontend/ para o container
      - ./frontend:/app
    # command: npm start
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
    command: sleep infinity
    #command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    ports:
      - "8000:8000"
    networks:
      - app-network

volumes:
  postgres_data:
    name: vl_postgres

networks:
  app-network:
    driver: bridge
